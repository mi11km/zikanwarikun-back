type Query {
    user: User!                # tokenからログインユーザー情報収録
    timetable: Timetable!      # ログインユーザーのデフォルトの時間割取得(クラスと時間とその詳細も全部取得)
    timetables: [Timetable!]!  # ログインユーザーの時間割の一覧取得
    todos: [Todo]              # ログインユーザーのtodo一覧取得(is_done=falseでdeadlineが近い順) kind別に取得できてもいいかも
}

type Mutation {
    signup(input: NewUser!): Auth!
    updateLoginUser(input: UpdateUser!): Auth!
    deleteLoginUser(input: DeleteUser!): Boolean!
    login(input: Login!): Auth!
    refreshToken: String!  # return token, headerについてるトークンから更新する

    createTimetable(input: NewTimetable!): Timetable!
    updateTimetable(input: UpdateTimetable!): Timetable!
    deleteTimetable(input: ID!): Boolean!

    createClass(input: NewClass!): Class!
    updateClass(input: UpdateClass!): Class!
    deleteClass(input: ID!): Boolean!

    createClassTime(input: NewClassTime!): ClassTime!
    updateClassTime(input: UpdateClassTime!): ClassTime!

    createTodo(input: NewTodo!): Todo!
    updateTodo(input: UpdateTodo!): Todo!
    deleteTodo(input: ID!): Boolean!

    createUrl(input: NewUrl!): Url!
    updateUrl(input: UpdateUrl!): Url!
    deleteUrl(input: ID!): Boolean!
}

#　todo delete処理後の返り値を何にするべきか